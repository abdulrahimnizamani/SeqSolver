Factorial(0) {
   Fac(0) = 1 ;
   Fac(1) = 1 ;
   Fac(x) = x * Fac(x-1) ;
}

Fibonacci(0) {
   Fib(0) = 1 ;
   Fib(1) = 1 ;
   Fib(x) = Fib(x-1) + Fib(x-2) ;
}

Mirror(0) {
   Mirror(x) = f(x-n) ;
}

Double(0) {
   Dbl(x) = 2 * x ;
}

Square(1) {
   Sqr(x) = x * x ;
}

Pi(0) {
   Pi(0) = 3 ;
   Pi(1) = 1 ;
   Pi(2) = 4 ;
   Pi(3) = 1 ;
   Pi(4) = 5 ;
   Pi(5) = 9 ;
   Pi(6) = 2 ;
   Pi(7) = 6 ;
}

Prime(0) {
   Prime(0) = 2 ;
   Prime(1) = 3 ;
   Prime(2) = 5 ;
   Prime(3) = 7 ;
   Prime(4) = 11 ;
   Prime(5) = 13 ;
   Prime(6) = 17 ;
   Prime(7) = 19 ;
   Prime(8) = 23 ;
   Prime(9) = 29 ;
   Prime(10) = 31 ;
   Prime(11) = 37 ;
}

/* x^0 = 1
   x^1 = x

   x^2 = x * x

   2^2 = 4
   3^2 = 9
   4^2 = 16

   x^y = x * x^(y - 1)
   x^-y = 1 / x^y
*/

AddMul(1) {
   x + x = 2 * x ;
   2 * x = x + x ;
}
/* x + (y + z) = (x + y) + z
   (x + y) + z = x + (y + z)
*/

IdentityAdd(1) {
   x + 0 = x ;
   0 + x = x ;
}
CommutAdd(1) {
   x + y = y + x ;
}

DistributeMul(1) {
   x * (y + z) = x * y + x * z ;
   x * y + x * z = x * (y + z) ;
   (y + z) * x = y * x + z * x ;
   y * x + z * x = (y + z) * x ;
   x * (y - z) = x * y - x * z ;
   (x * y) - x * z = x * (y - z) ;
   (y - z) * x = y * x - z * x ;
   y * x - z * x = (y - z) * x ;
}

/* x * (y * z) = (x * y) * z
   (x * y) * z = x * (y * z)
*/

IdentityMul(1) {
   1 * x = x ;
   x * 1 = x ;
   x * 0 = 0 ;
   0 * x = 0 ;
}

CommutMul(1) {
   x * y = y * x ;
}

IdentitySub(1) {
   x - x = 0 ;
   x - 0 = x ;
   0 - x = -x ;
}

CommutSub(1) {
   x + -y = x - y ;
   (-x) + y = y - x ;
   x - y = x + -y ;
   y - x = -x + y ;
   (x - y) - z = (x - z) - y ;
   (x + y) - z = (x - z) + y ;
   (x - z) + y = (x + y) - z ;
}

DistributeSub(1) {
   -x * (-y) = x * y ;
   -x * y = -(x * y) ;
   x - y = -y + x ;
   -y + x = x - y ;
   -x - y = -(x + y) ;
   -(x + y) = -x - y ;
   -x + -y = -(x + y) ;
   -(x - y) = -x + y ;
   -x + y = -(x - y) ;
   x - (-y) = x + y ;
   
   x - (y + z) = (x - y) - z ;
   x - (y - z) = (x - y) + z ;
   -x / y = -(x / y) ;
   x / -y = -(x / y) ;
   -x / -y = x / y ;
}
DoubleNeg(1) {
   -(-x) = x ;
}

IdentityDiv(1) {
   x / 1 = x ;
   x / x = 1 ;
   0 / x = 0 ;
   x / y = 1 / (y / x) ;
   x * (1 / x) = 1 ;
   (1 / x) * x = 1 ;
}

DistributeDiv(1) {
   (x + y) / z = (x / z) + (y / z) ;
   (x - y) / z = x / z - y / z ;
   x / y + z / y = (x + z) / y ;
   x / y - z / y = (x - z) / y ;
   x / y * z / y = (x * z) / (y * y) ;
   x / (y / z) = x * (z / y) ;
   x * (z / y) = x / (y / z) ;
}

CommutDiv(1) {
   (x / y) / z = (x / z) / y ;
}

SizeMatch(0) { }

Expand(1) { }
Recall(1) { }
Roundup(1) { }
Simplify(1) { }
ExpandDiv(1) { }
Inspect(1) { }

PowerAdd(1) { }
UnitAdd(1) { }
Compress(1) { }
CommonFactor(0) {}
Expand(1) { }
Expand'(1) { }

Factors(1) { }
PowerMultiply(1) { }

Borrow(1) { }
PowerSubtract(1) { }
UnitSubtract(1) { }
PowerDivide(1) { }

